spring-aop-aspectj：使用aspectj框架实现aop
使用aop：目的是给已经存在的一些类和方法，增加额外的功能，前提是不改变原来的类的代码

使用aspectj实现aop的基本步骤：
1. 新建maven项目
2. 加入依赖
    1）spring依赖
    2）aspectj依赖

3.创建目标类：接口和它的实现类
    要做的就是给类中的方法增加功能

4.创建切面类（就是普通的类）：
    1）在类的上面加入@Aspect
    2）在类中定义方法，方法就是切面要执行的功能代码，在方法的上面加入aspect中的通知注解，
       例如：@Before，还需要指定切入点表达式execution()

5.创建spring的配置文件：声明对象，把对象交给容器统一管理
    声明对象你可以使用注解或者xml配置文件<bean>
        1）声明目标对象
        2）声明切面类对象
        3）声明aspectj框架中的自动代理生成器标签
        自动生成代理器：用来完成代理对象的自动创建功能的

6.创建测试类，从spring容器中获取目标对象，实际上就是代理对象
    通过代理对象执行方法，实现aop的功能增强



什么时候考虑使用aop技术？
    1. 当需要给一个系统中存在的类修改功能，但是原有的类的功能不完善，但是你还有源代码，使用aop就能增加功能
    2. 你要给项目中的多个类，添加一个相同的方法，使用aop
    3. 给业务方法增加事务，日志输出。


